<?php

/**
 * @file
 * Defines the Wishlist template entity and associated features.
 */

use Drupal\Core\Render\Element;

/**
 * Callback function that returns a list of taxonomy view modes.
 */
function _wishlist_template_term_view_mode_values() {
  // Grab the View Mode service.
  $entity_display_repository = \Drupal::service('entity_display.repository');

  // The entity type for which we are looking.
  $entity_type_id = "taxonomy_term";

  // Use the service to get an array of available modes.
  $view_modes = $entity_display_repository->getViewModes($entity_type_id);

  // Create a simple "allowed_values" array
  $allowed_values = array();
  foreach ($view_modes as $id => $view_mode) {
    $allowed_values[$id] = $view_mode['label'] . ' (' . $id . ')';
  }

  return $allowed_values;
}

/**
 * Implements hook_theme().
 */
function wishlist_template_theme() {
  return [
    'wishlist_template' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_wishlist_template().
 */
function wishlist_template_theme_suggestions_wishlist_template(array $variables) {
  return _commerce_entity_theme_suggestions('wishlist_template', $variables);
}

/**
 * Prepares variables for wishlist template templates.
 *
 * Default template: wishlist-template.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing rendered fields.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_wishlist_template(array &$variables) {
  /** @var Drupal\wishlist_template\Entity\WishlistTemplateInterface $wishlist_template */
  $wishlist_template = $variables['elements']['#wishlist_template'];

  $variables['wishlist_template_entity'] = $wishlist_template;
  $variables['wishlist_template_url'] = $wishlist_template->toUrl();
  $variables['wishlist_template'] = [];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['wishlist_template'][$key] = $variables['elements'][$key];
  }
}
